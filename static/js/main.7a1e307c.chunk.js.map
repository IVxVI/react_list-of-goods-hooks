{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","React","memo","goods","map","good","goodsFromServer","App","useState","isReversed","setReversed","None","sortType","setSortType","visibleGoods","sort","g1","g2","Alphabet","localeCompare","Length","length","getReorderedGoods","reverse","className","type","classNames","onClick","reversed","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mFCbQC,EAA6BC,IAAMC,MAAK,YAAgB,IAAbC,EAAY,EAAZA,MACtD,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,WDJnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KA4BE,IAAMQ,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAST,EAASY,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAzBD,SACLX,EACAS,GAEA,IAAME,EAAY,YAAOX,GAezB,OAbAW,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKb,EAASmB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAINP,EAMcQ,CAAkBhB,EAAiBM,GAMxD,OAJIH,GACFK,EAAaS,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPE,IAAW,CAAE,WAAYd,IAAab,EAASmB,YAEjDS,QAAS,kBAAMd,GAAY,kBAAMd,EAASmB,aAL5C,iCAUA,wBACEO,KAAK,SACLD,UAAS,4BACPE,IAAW,CAAE,WAAYd,IAAab,EAASqB,UAEjDO,QAAS,kBAAMd,GAAY,kBAAMd,EAASqB,WAL5C,4BAUA,wBACEK,KAAK,SACLD,UAAS,4BACPE,IAAW,CAAE,YAA2B,IAAfjB,KAE3BkB,QAAS,kBAAMjB,GAAY,SAACkB,GAAD,OAAeA,MAL5C,sBAUgB,IAAfnB,GACEG,IAAab,EAASY,KAErB,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,GAAY,kBAAMd,EAASY,QAC3BD,GAAY,kBAAM,MALtB,mBAWA,MAIN,cAACV,EAAD,CAAWG,MAAOW,QExGxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a1e307c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabet,\n  Length,\n  None,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.Alphabet:\n        return g1.localeCompare(g2);\n\n      case SortType.Length:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.None);\n  const visibleGoods = getReorderedGoods(goodsFromServer, sortType);\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            classNames({ 'is-light': sortType !== SortType.Alphabet })\n          }`}\n          onClick={() => setSortType(() => SortType.Alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${\n            classNames({ 'is-light': sortType !== SortType.Length })\n          }`}\n          onClick={() => setSortType(() => SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${\n            classNames({ 'is-light': isReversed === false })\n          }`}\n          onClick={() => setReversed((reversed) => !reversed)}\n        >\n          Reverse\n        </button>\n\n        {isReversed !== false\n        || sortType !== SortType.None\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortType(() => SortType.None);\n                setReversed(() => false);\n              }}\n            >\n              Reset\n            </button>\n          )\n          : ''}\n\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>{good}</li>\n      ))}\n    </ul>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}